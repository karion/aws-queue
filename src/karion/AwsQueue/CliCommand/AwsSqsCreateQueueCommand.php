<?php

namespace karion\AwsQueue\CliCommand;


use karion\AwsQueue\Service\QueueManipulationService;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Style\SymfonyStyle;

class AwsSqsCreateQueueCommand extends Command
{
    /**
     * @var QueueManipulationService
     */
    private $queueManipulationService;

    /**
     * AwsSqsQueueListCommand constructor.
     * @param QueueManipulationService $queueManipulationService
     * @param null $name
     */
    public function __construct(QueueManipulationService $queueManipulationService, $name = null)
    {
        $this->queueManipulationService = $queueManipulationService;

        parent::__construct($name);
    }

    protected function configure()
    {
        $this
            ->setName('sqs:queue_create')
            ->setDescription("Create queue in AWS SQS service")
            ->addArgument("name", InputArgument::REQUIRED, "Name of new Queue.")

        ;

//        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $io = new SymfonyStyle($input, $output);

        $name = $input->getArgument('name');

        try {
            $queueUrl = $this->queueManipulationService->createQueue($name);
        } catch (\InvalidArgumentException $e) {
            $io->error($e->getMessage());
            return;
        }

        $io->title('Queue created:');
        $io->text($queueUrl);

        return;
    }

}